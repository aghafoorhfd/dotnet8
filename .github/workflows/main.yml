name: Build and Deploy .NET Core 8 Project to Windows VM

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: windows-latest
    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 1: Setup .NET SDK
    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x' # Use the .NET 8 SDK

    # Step 2: Restore dependencies
    - name: Restore dependencies
      run: |
        dotnet restore

    # Step 3: Build the project
    - name: Build project
      run: |
        dotnet build --configuration Release

    # Step 4: Publish the application (output folder for deployment)
    - name: Publish application
      run: |
        dotnet publish --configuration Release --output ./publish
    - name: Display the workspace path
      run: echo "The workspace is located at:$GITHUB_WORKSPACE"
    - name: Show contents of the workspace
      run: |
          echo "Listing contents of GITHUB_WORKSPACE directory:"
          dir $env:GITHUB_WORKSPACE
    - name: Set up WinRM TrustedHosts and copy files
      run: |
          # Define the remote machine and credentials
          $remoteComputer = "20.127.226.1"
          $username = "20.127.226.1\${{ secrets.AZURE_VM_USERNAME }}"
          $password = "${{ secrets.AZURE_VM_PASSWORD }}"
          
          # Set TrustedHosts (Allow connection from this IP)
          Set-Item WSMan:\localhost\Client\TrustedHosts -Value $remoteComputer -Force

          # Allow unencrypted traffic (Optional - only for HTTP communication)
          Set-Item WSMan:\localhost\Client\AllowUnencrypted -Value $true

          # Create a PSCredential object for authentication
          $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential($username, $securePassword)

          # Establish a PowerShell remoting session (HTTP or HTTPS)
          Enter-PSSession -ComputerName $remoteComputer -Credential $cred -Authentication Default

          # Copy files to the remote machine (adjust paths as needed)
          Copy-Item -Path "./publish/*" -Destination "C:\inetpub\wwwroot\code\" -Recurse -Force

          # Exit the remote session
          Exit-PSSession
          env:
          REMOTE_USER: ${{ secrets.AZURE_VM_USERNAME }}
          REMOTE_PASSWORD: ${{ secrets.AZURE_VM_PASSWORD }}

          





          



          
